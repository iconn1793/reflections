What happens when you initialize a repository? Why do you need to do it?

It begins tracking any documents/files that are marked in the repository. Since Git is a sequence of code changes, this is the start of that sequence.



How is the staging area different from the working directory and the repository? 
What value do you think it offers?

Staging directory is for storing files that have had changes made before committing them to the repo. I'm not quite sure the value, but maybe more will be covered?



How can you use the staging area to make sure you have one commit per logical change?

You can compare it to the last commit in the repo and see if youâ€™ve made a noticeable change since then. 



 What are some situations when branches would be helpful in keeping your history organized? How would branches help?
 
With multiple engineers, when experimenting with features, when attempting multiple different bug fixes, etc. 



How do the diagrams help you visualize the branch structure?

By providing a visual graphic of the flow of development and iteration. 


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is a mix of both line of commits being applied to the same Master branch. The reason for
it being represented like that in the diagram is due to time stamp chronology.